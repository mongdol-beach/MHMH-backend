spring:
  datasource:
    url: jdbc:postgresql://db:5432/mhmh
    username: docker
    password: docker
  jpa:
    show-sql: false
    database: postgresql
    hibernate:
      ddl-auto: none
    database-platform: org.hibernate.dialect.PostgreSQLDialect
  security:
    oauth2:
      client:
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: id

        registration:
          naver:
            client-id: ${NAVER_CLIENT_ID}
            client-secret: ${NAVER_CLIENT_SECRET}
            client-authentication-method: client_secret_post
            redirect-uri: "http://localhost:8080/login/oauth2/code/kakao"
            client-name: naver
            authorization-grant-type: authorization_code

          kakao:
            client-id: ${KAKAO_CLIENT_ID}
            #            client-secret: ${KAKAO_CLIENT_SECRET}
            client-authentication-method: client_secret_post
            redirect-uri: "http://localhost:8080/login/oauth2/code/kakao"

            authorization-grant-type: authorization_code
            client-name: kakao
            scope:
              - profile_nickname
              - profile_image
              - account_email
              -

auth:
  jwt:
    secret: ${JWT_SECRET_KEY}
    exp:
      access: 1000000
      refresh: 30000000

oauth2:
  state: ${STATE}